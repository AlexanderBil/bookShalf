{"version":3,"sources":["components/ListBook.js","components/AddBook.js","components/Edit.js","components/Modal.js","App.js","index.js"],"names":["ListBook","props","books","editItem","useState","booksList","setBooksList","useEffect","removeItem","e","filter","item","id","target","className","map","name","author","category","isbn","onClick","to","AddBook","handleSubmit","addbook","goBack","useHistory","formValid","setFormValid","book","setBook","setAuthor","setCategory","setISBN","bookError","setBookError","authorError","setAuthorError","categoryError","setCategoryError","isbnError","setISBNError","bookDirty","setBookDirty","authorDirty","setAuthorDirty","categoryDirty","setCategoryDirty","isbnDirty","setISBNDirty","blurHandler","style","color","onBlur","onChange","value","bookHandler","type","required","htmlFor","authorHandler","categoryHandler","isbnHandler","disabled","Edit","booksEdit","deletetItem","handleEdit","saveEditBook","defaultValue","data-target","Modal","modal","close","setClose","App","setBooks","setBooksEdit","setModal","dataform","setDataform","fetch","then","data","json","length","mas","push","basename","exact","path","render","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8b7a4e9d.chunk.js","sourcesContent":["import {useState, useEffect} from 'react';\r\nimport {Link} from 'react-router-dom';\r\n \r\nfunction ListBook(props){\r\n\r\n  const {books, editItem} = props;\r\n  const [booksList, setBooksList] = useState([]);\r\n\r\n// кладем в стейт booksList, книги\r\n  useEffect(() => {\r\n    setBooksList(books)\r\n  }, [books]);\r\n\r\n   // функція видалення книги\r\n  const removeItem = (e) => {\r\n    setBooksList(booksList.filter(item => item.id != e.target.id))\r\n  }\r\n\r\n    return (\r\n      <div className = 'dashboard'>  \r\n        \r\n        <table className = \"highlight\">\r\n            <thead className = \"highlight\">\r\n              <tr>\r\n                  <th>Book title</th>\r\n                  <th>Author name</th>\r\n                  <th>Category</th>\r\n                  <th>ISBN</th>\r\n              </tr>\r\n            </thead>\r\n              \r\n              {booksList.map(item => \r\n                <tbody key = {item.id} className = \"highlight\">\r\n                    <tr >\r\n                      <td>{item.name}</td>\r\n                      <td>{item.author}</td>\r\n                      <td>{item.category}</td>\r\n                      <td>{item.isbn}</td>\r\n                      <td><button onClick = {removeItem} className = \"btn delete\" id = {item.id}>Delete</button></td>\r\n                      <td><Link to = '/edit'><button onClick = {editItem}  className = \"btn edit\" id = {item.id}>Edit</button></Link></td>\r\n                    </tr> \r\n              </tbody>\r\n              )}\r\n        </table>\r\n       <Link to = '/addbook'> <button className = \"btn add\">Add Book</button> </Link>\r\n    </div>\r\n    )\r\n  }\r\n  export {ListBook}\r\n  \r\n\r\n  ","import {useHistory} from 'react-router-dom';\r\nimport React, { useState, useEffect } from 'react';\r\n\r\nfunction AddBook(props){\r\n  const {handleSubmit, addbook} = props;\r\n  const {goBack} = useHistory();\r\n  \r\n// стан валідації форми\r\n  const [formValid, setFormValid] = useState(false)\r\n\r\n\r\n  // заносим значення з input\r\n  const [book, setBook] = useState('');\r\n  const [author, setAuthor] = useState('');\r\n  const [category, setCategory] = useState('');\r\n  const [isbn, setISBN] = useState('');\r\n\r\n  // стан, який відображає помилку\r\n  const[bookError, setBookError] = useState('Fill in the field Book');\r\n  const[authorError, setAuthorError] = useState('Fill in the field Author');\r\n  const[categoryError, setCategoryError] = useState('Fill in the field Category');\r\n  const[isbnError, setISBNError] = useState('Fill in the field ISBN');\r\n\r\n\r\n  //стан були в input чи ні (як тільки торкнемся input, міняєм на true)\r\n  const[bookDirty, setBookDirty] = useState(false);\r\n  const[authorDirty, setAuthorDirty] = useState(false);\r\n  const[categoryDirty, setCategoryDirty] = useState(false);\r\n  const[isbnDirty, setISBNDirty] = useState(false);\r\n\r\n\r\n  useEffect( () => {\r\n    if(bookError || authorError || categoryError || isbnError){\r\n        setFormValid(false)\r\n    }else{\r\n        setFormValid(true)\r\n    }\r\n }, [bookError, authorError, categoryError, isbnError])\r\n\r\n\r\n\r\n// функція для зміни стану book\r\nconst bookHandler = (e) => {\r\n  setBook(e.target.value)\r\n  if(e.target.value == ''){\r\n    setBookError('Value is not correct ')\r\n  }else{\r\n    setBookError('')\r\n  }\r\n}\r\n\r\n// функція для зміни стану author\r\nconst authorHandler = (e) => {\r\n  setAuthor(e.target.value)\r\n  if(e.target.value == ''){\r\n    setAuthorError('Value is not correct ')\r\n  }else{\r\n    setAuthorError('')\r\n  }\r\n}\r\n\r\n// функція для зміни стану category\r\nconst categoryHandler = (e) => {\r\n  setCategory(e.target.value)\r\n  if(e.target.value == ''){\r\n    setCategoryError('Value is not correct ')\r\n  }else{\r\n    setCategoryError('')\r\n  }\r\n}\r\n\r\n// функція для зміни стану isbn\r\nconst isbnHandler = (e) => {\r\n  setISBN(e.target.value)\r\n  if(e.target.value == ''){\r\n    setISBNError('Value is not correct ')\r\n  }else{\r\n    setISBNError('')\r\n  }\r\n}\r\n\r\n  //функція для події blur (коли користувач залишив поле вводу)\r\n  const blurHandler = (e) => {\r\n    switch(e.target.name){\r\n      case 'name': setBookDirty(true)\r\n      break\r\n      case 'author': setAuthorDirty(true)\r\n      break\r\n      case 'category': setCategoryDirty(true)\r\n      break\r\n      case 'isbn': setISBNDirty(true)\r\n      break\r\n    }\r\n  }\r\n\r\n    return (\r\n      <div className = \"column\">\r\n          <form className = \"col s12\">\r\n            <div className=\"input-field col s6\">\r\n              {(bookDirty && bookError) &&  <div style={{color: 'red'}}>{bookError}</div>}\r\n               <input onBlur = {(e) => blurHandler(e)} onChange = {(e) => {handleSubmit(e); bookHandler(e)}} value={book} name = \"name\" id=\"book-name\" type=\"text\" className=\"validate\" required/>\r\n                 <label className=\"active\" htmlFor=\"first_name2\">Book</label>\r\n            </div>\r\n\r\n            <div className=\"input-field col s6\">\r\n            {(authorDirty && authorError) &&  <div style={{color: 'red'}}>{authorError}</div>}\r\n               <input onBlur = {(e) => blurHandler(e)} onChange = {(e) => {handleSubmit(e); authorHandler(e)}} value={author} name = \"author\" id=\"book-author\" type=\"text\" className=\"validate\" required/>\r\n                 <label className=\"active\" htmlFor=\"first_name2\">Author</label>\r\n            </div>\r\n\r\n            <div className=\"input-field col s6\">\r\n            {(categoryDirty && categoryError) &&  <div style={{color: 'red'}}>{categoryError}</div>}\r\n               <input onBlur = {(e) => blurHandler(e)} onChange = {(e) => {handleSubmit(e); categoryHandler(e)}} value={category} name = \"category\" id=\"book-category\" type=\"text\" className=\"validate\" required/>\r\n                 <label className=\"active\" htmlFor=\"first_name2\">Category</label>\r\n            </div>\r\n\r\n            <div className=\"input-field col s6\">\r\n            {(isbnDirty && isbnError) &&  <div style={{color: 'red'}}>{isbnError}</div>}\r\n               <input onBlur = {(e) => blurHandler(e)} onChange = {(e) => {handleSubmit(e); isbnHandler(e)}} value={isbn} name = \"isbn\" id=\"book-isbn\" type=\"text\" className=\"validate\" required/>\r\n                 <label className=\"active\" htmlFor=\"first_name2\">ISBN</label>\r\n            </div>\r\n\r\n          </form>\r\n          <button disabled={!formValid} onClick = {addbook} className = \"btn add\">Add Book</button>\r\n          <button onClick = {goBack} className = \"btn add right\">Back</button>\r\n       </div>\r\n    )\r\n  }\r\n  export {AddBook}","import {useHistory} from 'react-router-dom';\r\nimport React, {useState} from 'react';\r\n\r\nfunction Edit(props){\r\nconst {booksEdit, deletetItem, handleEdit, saveEditBook} = props;\r\nconst {goBack} = useHistory();\r\n\r\n    return (\r\n      <div className = \"column\">\r\n          <form className = \"col s12\">\r\n            <div className=\"input-field col s6\">\r\n               <input onChange = {(e) => handleEdit(e)} defaultValue={booksEdit.name} name = \"name\" id=\"book-name\" type=\"text\" className=\"validate\"/>\r\n                 <label className=\"active\" htmlFor=\"first_name2\">Book</label>\r\n            </div>\r\n\r\n            <div className=\"input-field col s6\">\r\n               <input onChange = {(e) => handleEdit(e)} defaultValue={booksEdit.author} name = \"author\" id=\"book-author\" type=\"text\" className=\"validate\"/>\r\n                 <label className=\"active\" htmlFor=\"first_name2\">Author</label>\r\n            </div>\r\n\r\n            <div className=\"input-field col s6\">\r\n               <input onChange = {(e) => handleEdit(e)}  defaultValue={booksEdit.category} name = \"category\" id=\"book-category\" type=\"text\" className=\"validate\"/>\r\n                 <label className=\"active\" htmlFor=\"first_name2\">Category</label>\r\n            </div>\r\n\r\n            <div className=\"input-field col s6\">\r\n               <input onChange = {(e) => handleEdit(e)}  defaultValue={booksEdit.isbn} name = \"isbn\" id=\"book-isbn\" type=\"text\" className=\"validate\"/>\r\n                 <label className=\"active\" htmlFor=\"first_name2\">ISBN</label>\r\n            </div>\r\n          </form>\r\n          <button data-target=\"modal1\" onClick = {saveEditBook} className = \"btn add\">Edit</button>\r\n\r\n          <button onClick = {() => {deletetItem(); goBack()}} className = \"btn add right\">Back</button>\r\n            </div>\r\n    )\r\n  }\r\n  export {Edit}","import {useState, useEffect} from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport React from \"react\";\r\nimport './Modal.css';\r\n\r\nfunction Modal (props) {\r\n  const {modal} = props;\r\n  const [close, setClose] = useState(true);\r\n\r\n  useEffect(() => {\r\n    setClose(modal)\r\n  }, [modal])\r\n  \r\n  function closeModal(){\r\n    setClose(!close)\r\n  }\r\n  return(\r\n    close && (\r\n    <div className = \"myModal\">\r\n        <div className = \"overlay\"></div>\r\n          <div className = \"modal-content\">\r\n            <div className = \"modal-content-center\">\r\n                <div className = \"title\">Change complited</div>  \r\n                <Link to = '/'> <button className = \"btn close\" onClick={closeModal}>Close</button> </Link>\r\n            </div>\r\n        </div>  \r\n    </div> \r\n    ) \r\n  )\r\n}\r\n\r\nexport {Modal}","import {BrowserRouter as Router, Route, Switch} from 'react-router-dom';\nimport {useState, useEffect} from 'react';\n\nimport {ListBook} from './components/ListBook';\nimport {AddBook} from './components/AddBook';\nimport {Edit} from './components/Edit'\nimport {Modal} from \"./components/Modal\"\n\n\nfunction App() {\n  const [books, setBooks] = useState([]);        // для компонента ListBook\n  const [booksEdit, setBooksEdit] = useState({}) // для компонента Edit\n  const [modal, setModal] = useState(false);\n\n  const [dataform, setDataform] = useState({     // дял компонента AddBook\n    name: '',\n    author: '',\n    category: '',\n    isbn: '',\n    id: 0,\n  })\n\n//заносим данні в books\nuseEffect(() => {\n  fetch('./db.json')\n  .then(data => data.json())\n  .then(data => setBooks(data))\n}, []);\n\n\n// функція що заносить в стейт dataform, данні з форми компонента AddBook\nconst handleSubmit = (e) => {\n  setDataform({...dataform, [e.target.name]: e.target.value})\n}\n\n// функція що заносить в стейт editForm, данні які ми міняєм в edit\nconst handleEdit = (e) => {\n  setBooksEdit({...booksEdit, [e.target.name]: e.target.value})\n}\n\n\n// функція додавання книги для компонента AddBook\nconst addbook = () => {\n  \n  dataform.id = books.length+1;\n  setBooks([...books, dataform])\n\n  setModal(!modal)\n}\n\n\n// функція для створення редагування (по кліку на Edit заносим в стейт booksEdit книгу яка спывпадаэ з id кнопки)\n  const editItem = (e) => {\n   books.map(item => {\n      if(item.id == e.target.id){\n           setBooksEdit(item)\n      }\n    })\n  }\n\n// функція яка обнуляє стейт booksEdit при натисненні кнопки Back в компоненті Edit\n  const deletetItem = () => {\n    setBooksEdit({})\n  }\n\n// функція яка зберігає редаговані дані\nconst saveEditBook = () =>{\n  let mas = []\n  books.map (item => {\n    if(item.id == booksEdit.id){\n      mas.push(item = booksEdit)\n    }\n    if(item.id != booksEdit.id){\n      mas.push(item)\n    }\n  })\n  setBooks(mas)\n\n  setModal(!modal)\n}\n\n\n  return (\n    <>\n    <Router basename='/bookShalf'>\n      <main className = \"container\">\n        <Switch>\n          <Route exact path = '/' render = {() => <ListBook books = {books} editItem = {editItem} />}/>\n          <Route  path = '/addbook' render = { () => <AddBook handleSubmit = {handleSubmit} addbook = {addbook}/> }/>\n          <Route  path = '/edit' render = {() => <Edit booksEdit = {booksEdit} deletetItem = {deletetItem} handleEdit = {handleEdit} saveEditBook ={saveEditBook} />}/>  \n        </Switch>\n        <Modal modal={modal} />\n      </main>\n    </Router>\n  </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}